import * as React from "react";

interface ISettingsSvgProps {
    id?: string;
    color?: string;
    hoverColor?: string;
    activeColor?: string;
    active?: boolean;
}

interface ISettingsSvgState {
    isHovered: boolean;
}

class SettingsSvg extends React.Component<ISettingsSvgProps, ISettingsSvgState> {

    public static defaultProps: ISettingsSvgProps = {
        color: "#6C6F82",
        activeColor: "#8174FF",
        hoverColor: "#4E4F5B",
        active: false,
    };

    constructor(props: any) {
        super(props);

        this.state = {
            isHovered: false,
        };
    }

    get color(): string {
        if (this.state.isHovered) {
            return this.props.hoverColor;
        }

        if (this.props.active) {
            return this.props.activeColor;
        }

        return this.props.color;
    }

    handleMouseMove = (): void => {
        if (this.state.isHovered === false && this.props.hoverColor) {
            this.setState({isHovered: true});
        }
    };

    handleMouseLeave = (): void => {
        if (this.props.hoverColor) {
            this.setState({isHovered: false});
        }
    };

    render(): JSX.Element {
        const {id} = this.props;

        return (
            <span id={id} onMouseLeave={this.handleMouseLeave} onMouseMove={this.handleMouseMove}>
                <svg width="35" height="35" viewBox="0 0 36 36" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path fillRule="evenodd" clipRule="evenodd"
                          d="M19.1001 7.00001H16.9085C16.8046 6.99926 16.704 7.03677 16.626 7.10539C16.548 7.174 16.4979 7.26892 16.4855 7.37203L16.3078 8.81784C16.3017 8.86905 16.2796 8.91704 16.2447 8.95499C16.2098 8.99293 16.1637 9.01891 16.1132 9.02922C15.0038 9.25878 13.9475 9.69475 12.9993 10.3144C12.9579 10.3417 12.9094 10.3562 12.8597 10.3562C12.8101 10.3562 12.7616 10.3417 12.7201 10.3144L11.6455 9.46888C11.3832 9.26596 11.1463 9.28287 10.994 9.46888L9.44553 10.9908C9.3777 11.0679 9.34029 11.1671 9.34029 11.2698C9.34029 11.3725 9.3777 11.4717 9.44553 11.5488L10.2917 12.7156C10.3232 12.7569 10.3403 12.8074 10.3403 12.8593C10.3403 12.9113 10.3232 12.9618 10.2917 13.0031C9.68702 13.9466 9.25977 14.9924 9.03091 16.0892C9.0211 16.1385 8.99635 16.1836 8.96003 16.2184C8.9237 16.2531 8.87756 16.2759 8.82784 16.2836L7.364 16.4781C7.26159 16.4907 7.16754 16.541 7.10026 16.6192C7.03298 16.6973 6.99728 16.7978 7.00016 16.9009V19.0907C7.00119 19.1918 7.03846 19.2892 7.10522 19.3653C7.17198 19.4413 7.26379 19.4908 7.364 19.505L8.81938 19.6826C8.87062 19.6886 8.91865 19.7107 8.95662 19.7456C8.9946 19.7805 9.0206 19.8265 9.03091 19.877C9.26301 20.9808 9.6961 22.0326 10.3086 22.98C10.3402 23.0213 10.3573 23.0718 10.3573 23.1238C10.3573 23.1757 10.3402 23.2262 10.3086 23.2675L9.46245 24.4343C9.39462 24.5114 9.35722 24.6106 9.35722 24.7133C9.35722 24.816 9.39462 24.9152 9.46245 24.9923L11.0109 26.5396C11.0881 26.6074 11.1874 26.6447 11.2901 26.6447C11.3929 26.6447 11.4922 26.6074 11.5694 26.5396L12.737 25.6941C12.7783 25.6625 12.8289 25.6455 12.8809 25.6455C12.9329 25.6455 12.9834 25.6625 13.0247 25.6941C13.964 26.3055 15.0081 26.7383 16.1047 26.9708C16.1568 26.9795 16.2047 27.0048 16.2413 27.0428C16.2779 27.0809 16.3012 27.1298 16.3078 27.1822L16.5024 28.628C16.5166 28.7304 16.5671 28.8242 16.6448 28.8925C16.7224 28.9608 16.822 28.999 16.9255 29H19.1001C19.2013 28.999 19.2988 28.9617 19.3748 28.895C19.4509 28.8283 19.5005 28.7366 19.5147 28.6364L19.6924 27.1653C19.6984 27.1141 19.7205 27.0661 19.7555 27.0281C19.7904 26.9902 19.8364 26.9642 19.887 26.9539C20.9862 26.7215 22.0332 26.2887 22.9754 25.6772C23.0167 25.6456 23.0673 25.6285 23.1193 25.6285C23.1713 25.6285 23.2218 25.6456 23.2631 25.6772L24.4308 26.5227C24.5058 26.5916 24.6039 26.6299 24.7058 26.6299C24.8077 26.6299 24.9058 26.5916 24.9808 26.5227L26.5377 24.9754C26.6039 24.8975 26.6402 24.7986 26.6402 24.6964C26.6402 24.5942 26.6039 24.4953 26.5377 24.4174L25.6916 23.2506C25.66 23.2093 25.6429 23.1588 25.6429 23.1068C25.6429 23.0549 25.66 23.0044 25.6916 22.9631C26.3022 22.0208 26.7352 20.9749 26.9692 19.877C26.9796 19.8265 27.0055 19.7805 27.0435 19.7456C27.0815 19.7107 27.1295 19.6886 27.1808 19.6826L28.6361 19.4881C28.7336 19.4745 28.8232 19.4273 28.8896 19.3548C28.956 19.2823 28.995 19.1889 29 19.0907V16.8924C29.0008 16.7908 28.9641 16.6924 28.897 16.616C28.8299 16.5396 28.7371 16.4905 28.6361 16.4781L27.1808 16.3005C27.1295 16.2945 27.0815 16.2724 27.0435 16.2375C27.0055 16.2026 26.9796 16.1566 26.9692 16.1061C26.7371 15.0023 26.3041 13.9505 25.6916 13.0031C25.66 12.9618 25.6429 12.9113 25.6429 12.8593C25.6429 12.8074 25.66 12.7569 25.6916 12.7156L26.5377 11.5488C26.6039 11.4709 26.6402 11.372 26.6402 11.2698C26.6402 11.1676 26.6039 11.0687 26.5377 10.9908L25.0062 9.44352C24.929 9.37574 24.8297 9.33836 24.7269 9.33836C24.6242 9.33836 24.5249 9.37574 24.4477 9.44352L23.28 10.289C23.2387 10.3206 23.1882 10.3376 23.1362 10.3376C23.0842 10.3376 23.0337 10.3206 22.9923 10.289C22.0488 9.68347 21.002 9.25643 19.9039 9.02922C19.8515 9.02266 19.8026 8.99937 19.7645 8.96281C19.7264 8.92625 19.7011 8.87837 19.6924 8.8263L19.5147 7.36358C19.5022 7.26271 19.4531 7.16994 19.3767 7.1029C19.3002 7.03587 19.2018 6.99925 19.1001 7.00001ZM16.9509 22.4558C17.7113 22.6328 18.5044 22.6131 19.2551 22.3988C20.0059 22.1844 20.6896 21.7824 21.2417 21.2307C21.7939 20.679 22.1962 19.9959 22.4107 19.2457C22.6252 18.4955 22.6448 17.703 22.4677 16.9431C22.2744 16.1205 21.8552 15.3682 21.2572 14.7707C20.6593 14.1732 19.9064 13.7543 19.0831 13.5611C18.3227 13.3842 17.5296 13.4038 16.7789 13.6181C16.0281 13.8325 15.3444 14.2345 14.7923 14.7862C14.2401 15.3379 13.8378 16.0211 13.6233 16.7713C13.4088 17.5215 13.3892 18.3139 13.5663 19.0738C13.7596 19.8964 14.1788 20.6487 14.7768 21.2462C15.3747 21.8437 16.1276 22.2626 16.9509 22.4558Z"
                          fill={this.color}/>
                </svg>
            </span>
        );
    }
}

export default SettingsSvg;
